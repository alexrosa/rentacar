// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	"rentcar/veiculo"

	mock "github.com/stretchr/testify/mock"
)

// Storage is an autogenerated mock type for the Storage type
type Storage struct {
	mock.Mock
}

// CreateVeiculo provides a mock function with given fields: nome, marca, ano, modelo
func (_m *Storage) CreateVeiculo(nome string, marca string, ano int, modelo int) error {
	ret := _m.Called(nome, marca, ano, modelo)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, int, int) error); ok {
		r0 = rf(nome, marca, ano, modelo)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteVeiculo provides a mock function with given fields: id
func (_m *Storage) DeleteVeiculo(id int) error {
	ret := _m.Called(id)

	var r0 error
	if rf, ok := ret.Get(0).(func(int) error); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetVeiculos provides a mock function with given fields:
func (_m *Storage) GetVeiculos() ([]veiculo.Veiculo, error) {
	ret := _m.Called()

	var r0 []veiculo.Veiculo
	if rf, ok := ret.Get(0).(func() []veiculo.Veiculo); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]veiculo.Veiculo)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateVeiculo provides a mock function with given fields: id, _a1
func (_m *Storage) UpdateVeiculo(id int, _a1 *veiculo.Veiculo) error {
	ret := _m.Called(id, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(int, *veiculo.Veiculo) error); ok {
		r0 = rf(id, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
